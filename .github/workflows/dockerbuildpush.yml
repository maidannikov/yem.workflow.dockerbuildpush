name: Docker Build and Push

on:
  workflow_call:
    inputs:
      registry_url:
        description: 'The URL of the Azure Container Registry'
        required: true
        type: string
      image_name:
        description: 'The name of the Docker image'
        required: true
        type: string
      version:
        description: 'The version tag for the Docker image'
        required: false
        type: string
      latest_tag:
        description: 'Include the "latest" tag (true/false)'
        required: false
        type: boolean
        default: false
      dockerfile_path:
        description: 'The path to the Dockerfile'
        required: false
        type: string
        default: '.'  # Default to current directory
    secrets:
      ACR_USERNAME:
        description: 'Azure Container Registry Username'
        required: true
      ACR_PASSWORD:
        description: 'Azure Container Registry Password'
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set version if not provided
        id: set-version
        run: |
          if [ -z "${{ inputs.version }}" ]; then
            echo "VERSION=0.0.${{ github.run_number }}" >> $GITHUB_ENV
          else
            echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV
          fi

      - name: Log in to Azure Container Registry
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ inputs.registry_url }} -u "${{ secrets.ACR_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build -f ${{ inputs.dockerfile_path }}/Dockerfile -t ${{ inputs.registry_url }}/${{ inputs.image_name }}:${{ env.VERSION }} ${{ inputs.dockerfile_path }}

      - name: Push Docker image
        run: |
          docker push ${{ inputs.registry_url }}/${{ inputs.image_name }}:${{ env.VERSION }}

      - name: Push "latest" tag (if enabled)
        if: ${{ inputs.latest_tag == 'true' }}
        run: |
          docker tag ${{ inputs.registry_url }}/${{ inputs.image_name }}:${{ env.VERSION }} ${{ inputs.registry_url }}/${{ inputs.image_name }}:latest
          docker push ${{ inputs.registry_url }}/${{ inputs.image_name }}:latest

      - name: Logout from Azure
        run: |
          docker logout ${{ inputs.registry_url }}
